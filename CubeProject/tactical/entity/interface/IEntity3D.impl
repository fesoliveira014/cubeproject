#ifndef _IENTITY3D_IMPL_
#define _IENTITY3D_IMPL_

#include "IEntity3D.h"

namespace tactical {
	namespace entity {
		template <typename V>
		void IEntity3D<V>::Rotate(float angle, const glm::vec3 &axis)
		{
			m_angle = angle;
			m_axis = glm::normalize(axis);
		}

		template <typename V>
		void IEntity3D<V>::RotateX(float angle)
		{
			m_angle = angle;
			m_axis = glm::vec3(1.0f, 0.0f, 0.0f);
		}

		template <typename V>
		void IEntity3D<V>::RotateY(float angle)
		{
			m_angle = angle;
			m_axis = glm::vec3(0.0f, 1.0f, 0.0f);
		}

		template <typename V>
		void IEntity3D<V>::RotateZ(float angle)
		{
			m_angle = angle;
			m_axis = glm::vec3(0.0f, 0.0f, 1.0f);
		}

		template <typename V>
		void IEntity3D<V>::Scale(const glm::vec3 &scale)
		{
			m_scale = scale;
		}
	}
}

#endif